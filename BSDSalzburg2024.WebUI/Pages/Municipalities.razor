@page "/municipalities"
@namespace BSDSalzburg2024.WebUI.Pages
@using BSDSalzburg2024.Application.Enums
@using BSDSalzburg2024.WebUI.Shared
@using BSDSalzburg2024.Application.Municipalities.Queries.GetMunicipalityListQuery

@inject IMediator mediator
@inject IStringLocalizer<Municipalities> localizer

<PageTitle>@this.localizer.GetString("Title")</PageTitle>

<section class="section">
    <h1 class="title">
        @this.localizer.GetString("Title")
    </h1>
</section>
<section>
    @if (this.listItems is not null)
    {
        <Pagination 
            PageSize="this.pageSize" 
            PageIndex="this.pageIndex" 
            ItemsTotal="this.listItemsTotal"
            OnPageChange="this.ChangePage">
        </Pagination>
        <table class="table is-striped is-hoverable is-fullwidth">
            <thead>
                <tr>
                    <th></th>
                    <th>@this.localizer.GetString("Country")</th>
                    <th>@this.localizer.GetString("PostalCode")</th>
                    <th>@this.localizer.GetString("Name")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in this.listItems)
                {
                    <tr>
                        <td>@item.Index</td>
                        <td><CountryName Model="item.Country"></CountryName></td>
                        <td>@item.Country.FormatPostalCode(item.PostalCode)</td>
                        <td>@item.Name</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</section>

@code {
    private int pageIndex;
    private int pageSize;

    private List<MunicipalityListItem> listItems;
    private int listItemsTotal;

    private async Task LoadList()
    {
        var request = new GetMunicipalityListQuery
            {
                PageIndex = pageIndex,
                PageSize = pageSize,
            };

        var result = await this.mediator.Send(request);
        this.listItems = result.Items.ToList();
        this.listItemsTotal = result.ItemsTotal;
    }

    private async Task ChangePage(int pageIndex)
    {
        this.pageIndex = pageIndex;

        await this.LoadList();
    }

    protected override async Task OnInitializedAsync()
    {
        this.pageIndex = 0;
        this.pageSize = 10;

        await this.LoadList();
        await base.OnInitializedAsync();
    }
}