// <auto-generated />
using System;
using BSDSalzburg2024.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BSDSalzburg2024.Data.Migrations
{
    [DbContext(typeof(BsdDatabaseContext))]
    [Migration("20240417094125_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblEhrung", b =>
                {
                    b.Property<int>("SpenderId")
                        .HasColumnType("int");

                    b.Property<string>("EhrungsId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Anmerkung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("BesuchFeier")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DatumFeier")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DatumGeschenk")
                        .HasColumnType("smalldatetime");

                    b.Property<bool?>("FeierBesucht")
                        .HasColumnType("bit");

                    b.HasKey("SpenderId", "EhrungsId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpenderId", "EhrungsId"), 90);

                    b.ToTable("tblEhrung", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblGemeinde", b =>
                {
                    b.Property<int>("GemeindeId")
                        .HasColumnType("int")
                        .HasColumnName("GemeindeID");

                    b.Property<string>("GemeindeLand")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("GemeindeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("GemeindePlz")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("GemeindePLZ");

                    b.HasKey("GemeindeId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("GemeindeId"), 90);

                    b.ToTable("tblGemeinde", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblKrankheit", b =>
                {
                    b.Property<int>("KrankhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KrankhId"));

                    b.Property<string>("Anmerkung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("ErfassungsDat")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("KrankhText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KrankhTyp")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("SpenderId")
                        .HasColumnType("int");

                    b.HasKey("KrankhId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("KrankhId"), 90);

                    b.ToTable("tblKrankheit", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblLaborwert", b =>
                {
                    b.Property<int>("LaborwertId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LaborwertID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaborwertId"));

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<int?>("KonserveId")
                        .HasColumnType("int")
                        .HasColumnName("KonserveID");

                    b.Property<string>("LaborwertNameId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<int?>("SpenderId")
                        .HasColumnType("int");

                    b.Property<string>("WertText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("WertZahl")
                        .HasColumnType("float");

                    b.HasKey("LaborwertId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("LaborwertId"), 90);

                    b.ToTable("tblLaborwert", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblLaborwertName", b =>
                {
                    b.Property<string>("LaborwertNameId")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("LaborwertNameID");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("LaborWertTyp")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Normalwertbis")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Normalwertvon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("NurWerteAusListe")
                        .HasColumnType("bit");

                    b.Property<int?>("Reihung")
                        .HasColumnType("int");

                    b.Property<string>("SphinBedingung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SphinDauer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SphinKurztext")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SphinLangtext")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("WerteListe")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("LaborwertNameId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("LaborwertNameId"), 90);

                    b.ToTable("tblLaborwertName", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblLogPgm", b =>
                {
                    b.Property<int>("LogPgmId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LogPgmDatZeit")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LogPgmText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MitarbeiterId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("LogPgmId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("LogPgmId"), 90);

                    b.ToTable("tblLogPgm", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblLogPgmDetail", b =>
                {
                    b.Property<int>("LogPgmDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogPgmDetailId"));

                    b.Property<DateTime?>("LogPgmDetailDatZeit")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LogPgmDetailText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LogPgmDetailTyp")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("LogPgmId")
                        .HasColumnType("int");

                    b.HasKey("LogPgmDetailId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("LogPgmDetailId"), 90);

                    b.ToTable("tblLogPgmDetail", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblMitarbeiter", b =>
                {
                    b.Property<string>("MitarbeiterId")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<bool>("AusAltdaten")
                        .HasColumnType("bit");

                    b.Property<string>("Bagwinid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BAGWINId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Funktion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("Geburtsdatum")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("GemeindeId")
                        .HasColumnType("int");

                    b.Property<string>("Geschlecht")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Plz")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Straße")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelBeruf")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("TelHandy")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("TelPrivat")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("MitarbeiterId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("MitarbeiterId"), 90);

                    b.ToTable("tblMitarbeiter", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblMitarbeiterSpendeaktion", b =>
                {
                    b.Property<int>("SpendeaktionId")
                        .HasColumnType("int")
                        .HasColumnName("SpendeaktionID");

                    b.Property<string>("MitarbeiterId")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("MitarbeiterID");

                    b.Property<string>("Funktion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SpendeaktionId", "MitarbeiterId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpendeaktionId", "MitarbeiterId"), 90);

                    b.ToTable("tblMitarbeiterSpendeaktion", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblOrt", b =>
                {
                    b.Property<string>("OrtId")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("OrtID");

                    b.Property<int?>("GemeindeId")
                        .HasColumnType("int")
                        .HasColumnName("GemeindeID");

                    b.Property<string>("OrtLand")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("OrtName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrtPlz")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("OrtStrasse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Unsichtbar")
                        .HasColumnType("bit");

                    b.HasKey("OrtId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("OrtId"), 90);

                    b.ToTable("tblOrt", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblParameter", b =>
                {
                    b.Property<string>("ParameterTyp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParameterId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ParameterID");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParameterWert")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ParameterTyp", "ParameterId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("ParameterTyp", "ParameterId"), 90);

                    b.ToTable("tblParameter", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblPostleitzahl", b =>
                {
                    b.Property<string>("Plz")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("GemeindeId")
                        .HasColumnType("int");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Plz");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("Plz"), 90);

                    b.ToTable("tblPostleitzahl", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblSpende", b =>
                {
                    b.Property<int>("SpendeId")
                        .HasColumnType("int")
                        .HasColumnName("SpendeID");

                    b.Property<string>("AbgewGrundId")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("AbgewId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AbgewSpHinBis")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("AbgewSpHinDauerhaft")
                        .HasColumnType("bit");

                    b.Property<string>("AbgewText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AbnehmerId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("AbnehmerID");

                    b.Property<DateTime?>("AenderungDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AenderungMitarbeiterId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("AenderungOrt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AenderungSpendeaktionId")
                        .HasColumnType("int");

                    b.Property<string>("AenderungTyp")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("AnamneseId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("AnamneseID");

                    b.Property<DateTime?>("AnamneseZeit")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AscheinKommentar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AScheinKommentar");

                    b.Property<bool>("AscheinUngueltig")
                        .HasColumnType("bit")
                        .HasColumnName("AScheinUngueltig");

                    b.Property<DateTime?>("AscheinZeit")
                        .HasColumnType("smalldatetime")
                        .HasColumnName("AScheinZeit");

                    b.Property<DateTime?>("Beginnzeit")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("BeutelAnz")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("BeutelProdCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<short?>("BlutdruckDia")
                        .HasColumnType("smallint");

                    b.Property<short?>("BlutdruckSys")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Endzeit")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("ExpBlutbank")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpBlutbankDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("ExpZentrale")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpZentraleDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<short?>("Gewicht")
                        .HasColumnType("smallint");

                    b.Property<float?>("Hb")
                        .HasColumnType("real")
                        .HasColumnName("HB");

                    b.Property<int?>("KonserveId")
                        .HasColumnType("int")
                        .HasColumnName("KonserveID")
                        .HasComment("KonserveID 7-stellig");

                    b.Property<string>("KonserveId2")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("char(16)")
                        .HasColumnName("KonserveID2")
                        .IsFixedLength()
                        .HasComment("KonserveID 16-stellig");

                    b.Property<bool>("LabWertProvisorisch")
                        .HasColumnType("bit");

                    b.Property<int?>("Menge")
                        .HasColumnType("int");

                    b.Property<bool>("NichtLegitimiert")
                        .HasColumnType("bit");

                    b.Property<string>("Selbstausschluss")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("SpendeArt")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("SpendeaktionId")
                        .HasColumnType("int")
                        .HasColumnName("SpendeaktionID");

                    b.Property<int?>("SpenderId")
                        .HasColumnType("int")
                        .HasColumnName("SpenderID");

                    b.Property<float?>("Temperatur")
                        .HasColumnType("real");

                    b.HasKey("SpendeId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpendeId"), 90);

                    b.ToTable("tblSpende", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblSpendeHinderni", b =>
                {
                    b.Property<int>("SpendeHindernisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SpendeHindernisID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpendeHindernisId"));

                    b.Property<int?>("AbgewId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AenderungDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AenderungMitarbeiterId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("AenderungTyp")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Anmerkung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DatumBis")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("DatumVon")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("Dauerhaft")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ErfassungsDat")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("SpendeHinNrAs400")
                        .HasColumnType("int")
                        .HasColumnName("SpendeHinNrAS400");

                    b.Property<string>("SpendeHindernisText")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SpendeHindernisTyp")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("SpenderId")
                        .HasColumnType("int")
                        .HasColumnName("SpenderID");

                    b.HasKey("SpendeHindernisId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpendeHindernisId"), 90);

                    b.ToTable("tblSpendeHindernis", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblSpendeaktion", b =>
                {
                    b.Property<int>("SpendeaktionId")
                        .HasColumnType("int");

                    b.Property<int?>("AnzBlGr")
                        .HasColumnType("int");

                    b.Property<int?>("AnzKons")
                        .HasColumnType("int");

                    b.Property<int?>("AnzWeg")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("OrtDetail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("OrtId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Typ")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateTime?>("ZeitAbfahrt")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ZeitBeginn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ZeitBis")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ZeitEnde")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ZeitRueckkehr")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ZeitVon")
                        .HasColumnType("smalldatetime");

                    b.HasKey("SpendeaktionId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpendeaktionId"), 90);

                    b.ToTable("tblSpendeaktion", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblSpendeaktionVerbrauch", b =>
                {
                    b.Property<int>("SpendeaktionId")
                        .HasColumnType("int")
                        .HasColumnName("SpendeaktionID");

                    b.Property<string>("Verbrauchsgut")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Menge")
                        .HasColumnType("int");

                    b.HasKey("SpendeaktionId", "Verbrauchsgut");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpendeaktionId", "Verbrauchsgut"), 90);

                    b.ToTable("tblSpendeaktionVerbrauch", (string)null);
                });

            modelBuilder.Entity("BSDSalzburg2024.Data.Entities.TblSpender", b =>
                {
                    b.Property<int>("SpenderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AenderungDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("AenderungMitarbeiterId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("AenderungOrt")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("AenderungSpendeaktionId")
                        .HasColumnType("int");

                    b.Property<string>("AenderungTyp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("AusweisLetzter")
                        .HasColumnType("smalldatetime");

                    b.Property<bool>("AusweisNoetig")
                        .HasColumnType("bit");

                    b.Property<string>("Blutgruppe")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime?>("EhrungLetzte")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("EhrungsId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("EhrungsID");

                    b.Property<bool>("EinladungBrief")
                        .HasColumnType("bit");

                    b.Property<bool>("EinladungEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("EinladungKeine")
                        .HasColumnType("bit");

                    b.Property<bool>("EinladungNurSms")
                        .HasColumnType("bit")
                        .HasColumnName("EinladungNurSMS");

                    b.Property<bool>("EinladungSms")
                        .HasColumnType("bit")
                        .HasColumnName("EinladungSMS");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("ExpZentrale")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ExpZentraleDatum")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Geburtsdatum")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("GemeindeId")
                        .HasColumnType("int");

                    b.Property<string>("Geschlecht")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Kommentar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("KompanieFirma")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Land")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phaenotyp")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Plz")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<int?>("ProgesaId")
                        .HasColumnType("int")
                        .HasColumnName("ProgesaID");

                    b.Property<short?>("SpendenAnzahl")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("SpendenLetzte")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Strasse")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TelBeruf")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("TelHandy")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("TelPrivat")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.HasKey("SpenderId");

                    SqlServerKeyBuilderExtensions.HasFillFactor(b.HasKey("SpenderId"), 90);

                    b.ToTable("tblSpender", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
